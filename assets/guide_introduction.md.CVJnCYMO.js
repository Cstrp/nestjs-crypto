import{_ as s,c as i,o as a,ag as e}from"./chunks/framework.BNkdQkmN.js";const k=JSON.parse('{"title":"What is NestJS Crypto?","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduction.md","filePath":"guide/introduction.md","lastUpdated":1760773835000}'),n={name:"guide/introduction.md"};function r(l,t,h,p,d,o){return a(),i("div",null,[...t[0]||(t[0]=[e(`<h1 id="what-is-nestjs-crypto" tabindex="-1">What is NestJS Crypto? <a class="header-anchor" href="#what-is-nestjs-crypto" aria-label="Permalink to &quot;What is NestJS Crypto?&quot;">​</a></h1><p>NestJS Crypto is a comprehensive cryptography module for NestJS applications that provides both <strong>irreversible (bcrypt)</strong> and <strong>reversible (AES-256-CBC)</strong> encryption methods with a focus on security, performance, and ease of use.</p><h2 id="why-nestjs-crypto" tabindex="-1">Why NestJS Crypto? <a class="header-anchor" href="#why-nestjs-crypto" aria-label="Permalink to &quot;Why NestJS Crypto?&quot;">​</a></h2><h3 id="🔐-dual-encryption-support" tabindex="-1">🔐 Dual Encryption Support <a class="header-anchor" href="#🔐-dual-encryption-support" aria-label="Permalink to &quot;🔐 Dual Encryption Support&quot;">​</a></h3><ul><li><strong>Bcrypt</strong> for secure password hashing</li><li><strong>AES-256-CBC</strong> for data encryption/decryption</li></ul><h3 id="⚡-performance-optimized" tabindex="-1">⚡ Performance Optimized <a class="header-anchor" href="#⚡-performance-optimized" aria-label="Permalink to &quot;⚡ Performance Optimized&quot;">​</a></h3><ul><li>Efficient encryption algorithms</li><li>Built-in performance benchmarks</li><li>Configurable salt rounds for bcrypt</li></ul><h3 id="🛡️-security-first" tabindex="-1">🛡️ Security First <a class="header-anchor" href="#🛡️-security-first" aria-label="Permalink to &quot;🛡️ Security First&quot;">​</a></h3><ul><li>Industry-standard encryption algorithms</li><li>Automatic secure key generation</li><li>Input validation and error handling</li><li>No hardcoded secrets</li></ul><h3 id="🔧-developer-friendly" tabindex="-1">🔧 Developer Friendly <a class="header-anchor" href="#🔧-developer-friendly" aria-label="Permalink to &quot;🔧 Developer Friendly&quot;">​</a></h3><ul><li><strong>TypeScript Native</strong>: Full type safety and IntelliSense support</li><li><strong>Easy Integration</strong>: Simple NestJS module setup</li><li><strong>Async Configuration</strong>: Support for dynamic configuration from ConfigService</li><li><strong>Comprehensive Docs</strong>: Detailed API documentation and examples</li></ul><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><h3 id="password-hashing-with-bcrypt" tabindex="-1">Password Hashing with Bcrypt <a class="header-anchor" href="#password-hashing-with-bcrypt" aria-label="Permalink to &quot;Password Hashing with Bcrypt&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Hash passwords securely</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bcryptService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;userPassword&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Verify passwords</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isValid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bcryptService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;userPassword&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hash);</span></span></code></pre></div><h3 id="data-encryption-with-aes" tabindex="-1">Data Encryption with AES <a class="header-anchor" href="#data-encryption-with-aes" aria-label="Permalink to &quot;Data Encryption with AES&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Encrypt sensitive data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">encrypted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">iv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aesService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sensitive data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Decrypt data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> decrypted</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aesService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(encrypted, key, iv);</span></span></code></pre></div><h3 id="automatic-key-generation" tabindex="-1">Automatic Key Generation <a class="header-anchor" href="#automatic-key-generation" aria-label="Permalink to &quot;Automatic Key Generation&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Keys and IVs are automatically generated if not provided</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aesService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Auto-generates key &amp; IV</span></span></code></pre></div><h2 id="use-cases" tabindex="-1">Use Cases <a class="header-anchor" href="#use-cases" aria-label="Permalink to &quot;Use Cases&quot;">​</a></h2><ul><li>🔑 <strong>User Authentication</strong>: Secure password hashing and verification</li><li>📁 <strong>Data Encryption</strong>: Encrypt sensitive user data, PII, etc.</li><li>🔐 <strong>API Key Management</strong>: Generate and store API keys securely</li><li>📧 <strong>Email Encryption</strong>: Encrypt email addresses and personal information</li><li>💳 <strong>Payment Data</strong>: Secure storage of payment information (PCI compliant)</li><li>📝 <strong>File Encryption</strong>: Encrypt files before storage</li></ul><h2 id="architecture" tabindex="-1">Architecture <a class="header-anchor" href="#architecture" aria-label="Permalink to &quot;Architecture&quot;">​</a></h2><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[NestJS Application] --&gt; B[CryptoModule]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; C[BcryptService]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; D[AesService]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; E[Password Hashing]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; F[Password Verification]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; G[Data Encryption]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; H[Data Decryption]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; I[Key Generation]</span></span></code></pre></div><h2 id="comparison-with-other-solutions" tabindex="-1">Comparison with Other Solutions <a class="header-anchor" href="#comparison-with-other-solutions" aria-label="Permalink to &quot;Comparison with Other Solutions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Feature</th><th>NestJS Crypto</th><th>bcrypt</th><th>crypto-js</th><th>node-forge</th></tr></thead><tbody><tr><td>NestJS Integration</td><td>✅ Native</td><td>❌ Manual</td><td>❌ Manual</td><td>❌ Manual</td></tr><tr><td>TypeScript Support</td><td>✅ Full</td><td>⚠️ Partial</td><td>⚠️ Partial</td><td>⚠️ Partial</td></tr><tr><td>Bcrypt Hashing</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td>AES Encryption</td><td>✅</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>Auto Key Generation</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>Async Configuration</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>Error Handling</td><td>✅ Custom</td><td>⚠️ Basic</td><td>⚠️ Basic</td><td>⚠️ Basic</td></tr><tr><td>Input Validation</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>Test Coverage</td><td>✅ 70%+</td><td>❌</td><td>❌</td><td>❌</td></tr></tbody></table><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Ready to get started? Head over to the <a href="/nestjs-crypto/guide/getting-started">Getting Started</a> guide to install and configure NestJS Crypto in your application.</p><p>Or explore:</p><ul><li><a href="/nestjs-crypto/guide/getting-started">Installation &amp; Setup</a></li><li><a href="/nestjs-crypto/guide/configuration">Module Configuration</a></li><li><a href="/nestjs-crypto/api/overview">API Reference</a></li><li><a href="/nestjs-crypto/examples/authentication">Examples</a></li></ul>`,28)])])}const y=s(n,[["render",r]]);export{k as __pageData,y as default};
