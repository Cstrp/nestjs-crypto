name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Bump version
        id: version
        run: |
          NEW_VERSION=$(npm version ${{ inputs.version }} --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Update CHANGELOG
        run: |
          VERSION=${{ steps.version.outputs.new_version }}
          DATE=$(date +%Y-%m-%d)
          echo -e "## $VERSION ($DATE)\n\n### Changes\n- Version bump to $VERSION\n\n$(cat CHANGELOG.md)" > CHANGELOG.md

      - name: Commit version bump
        run: |
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}"
          git push origin main

      - name: Create and push tag
        run: |
          git tag ${{ steps.version.outputs.new_version }}
          git push origin ${{ steps.version.outputs.new_version }}

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new_version }}
          release_name: Release ${{ steps.version.outputs.new_version }}
          body: |
            ## 🚀 Release ${{ steps.version.outputs.new_version }}

            ### 📦 Installation
            ```bash
            npm install nestjs-crypto@${{ steps.version.outputs.new_version }}
            ```

            ### 📝 Changes
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for full details.

            ### 📚 Documentation
            - [Documentation](https://cstrp.github.io/nestjs-crypto/)
            - [npm Package](https://www.npmjs.com/package/nestjs-crypto)
          draft: false
          prerelease: false
